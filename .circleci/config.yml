version: 2

defaults: &defaults
  docker:
    - image: circleci/android:api-28
  environment:
    JVM_OPTS: -Xmx3200m

workflows:
  version: 2
  mobile-wallet-deploy-internal:
    jobs:
      - instrumentation-test
      - hold:
          type: approval
          requires:
            - instrumentation-test
      - build-deploy-internal:
          requires:
            - hold

  proxy-server-build-test-deploy:
    jobs:
      - proxy-server-build
      - proxy-server-lint:
          requires:
            - proxy-server-build
      - proxy-server-test:
          requires:
            - proxy-server-build
      - proxy-server-publish:
          requires:
            - proxy-server-test
      - proxy-server-deploy:
          requires:
            - proxy-server-publish
          filters:
            branches:
              only: master

jobs:
  #
  # Mobile wallet build jobs
  #

  instrumentation-tests:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Install fastlane
          command: cd ./android && bundle install
      - run:
          name: Store service account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run:
          name: Authorize to gcloud
          command: gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json --project=${GOOGLE_PROJECT_ID}
      - run:
          name: Run the instrumentation tests in Firebase test lab
          command: cd ./android && sudo apt-get update && sudo apt-get install npm -y && npm i @react-native-community/cli-platform-android && bundle exec fastlane instrumentation_tests
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

  deploy-internal:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Install fastlane
          command: cd ./android && bundle install
      - run:
          name: Store the google play key
          command: echo $GOOGLE_PLAY_KEY > gplay_key.json
      - run:
          name: Init fastlane supply
          command: cd ./android && bundle exec fastlane supply init
      #- run:
          #name: Download CI data
          #command: ./ci/download_ci_data.sh
      - run:
          name: Deploy the app to the internal track
          command: cd ./android && bundle exec fastlane deploy_internal
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

  #
  # Proxy server build jobs
  #

  proxy-server-build:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-proxy-server-node-modules-cache-{{ checksum "proxy-server/package-lock.json" }}
      - run:
          name: Install proxy-server node packages
          command: |
            cd proxy-server
            npm install
      - save_cache:
          key: v1-proxy-server-node-modules-cache-{{ checksum "proxy-server/package-lock.json" }}
          paths: "proxy-server/node_modules/"
      - persist_to_workspace:
          name: Persist workspace
          root: .
          paths: "proxy-server/"

  proxy-server-lint:
    docker:
      - image: circleci/node:10
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run proxy-server lint
          command: |
            cd proxy-server
            npm run lint

  proxy-server-test:
    docker:
      - image: circleci/node:10
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run proxy-server tests
          command: |
            cd proxy-server
            npm run test

  proxy-server-publish:
    docker:
      - image: google/cloud-sdk
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run: |
          export SHORT_GIT_HASH=$(echo $CIRCLE_SHA1 | cut -c -7)
          export PROXY_SERVER_DOCKER_TAG=$(echo $PROXY_SERVER_DOCKER_REPO_URL:$SHORT_GIT_HASH)
          echo $PROXY_SERVER_GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
          gcloud auth configure-docker
          cd proxy-server
          docker build -t $PROXY_SERVER_DOCKER_IMAGE_NAME .
          docker tag $PROXY_SERVER_DOCKER_IMAGE_NAME $PROXY_SERVER_DOCKER_TAG
          docker push $PROXY_SERVER_DOCKER_TAG

  proxy-server-deploy:
    docker:
      - image: google/cloud-sdk
    steps:
      - run: |
          export SHORT_GIT_HASH=$(echo $CIRCLE_SHA1 | cut -c -7)
          export PROXY_SERVER_DOCKER_TAG=$(echo $PROXY_SERVER_DOCKER_REPO_URL:$SHORT_GIT_HASH)
          echo $PROXY_SERVER_GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
          gcloud auth configure-docker
          gcloud beta container clusters get-credentials $PROXY_SERVER_GCP_CLUSTER_DEVELOPMENT --region $PROXY_SERVER_GCP_REGION --project $PROXY_SERVER_GCP_PROJECT
          kubectl set image deployment/mobile-wallet-proxy mobile-wallet-proxy=$PROXY_SERVER_DOCKER_TAG
