version: 2

workflows:
  version: 2
  mobile-wallet-build-tests:
    jobs:
      - mobile-wallet-build
      - mobile-wallet-tests:
          requires:
            - mobile-wallet-build
      - mobile-wallet-lint:
          requires:
            - mobile-wallet-build
      - mobile-wallet-dependency-audit:
          requires:
            - mobile-wallet-build

  proxy-server-build-test-deploy:
    jobs:
      - proxy-server-build
      - proxy-server-lint:
          requires:
            - proxy-server-build
      - proxy-server-test:
          requires:
            - proxy-server-build
      - proxy-server-dependency-audit:
          requires:
            - proxy-server-build
      - proxy-server-publish:
          requires:
            - proxy-server-test
      - proxy-server-deploy:
          requires:
            - proxy-server-publish
          filters:
            branches:
              only: master
  
  testflight-release: 
    jobs: 
      - fastlane-to-testflight

jobs:
  #
  # Mobile wallet build jobs
  #
  mobile-wallet-build:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-mobile-wallet-node-modules-{{ checksum "package-lock.json" }}
      - run:
          name: Run mobile-wallet build
          command: npm install
      - save_cache:
          key: v1-mobile-wallet-node-modules-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - persist_to_workspace:
          name: Persist workspace
          root: .
          paths: '.'

  mobile-wallet-tests:
    docker:
      - image: circleci/node:10
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run mobile-wallet tests with JUnit as reporter
          command: |
            npm run test-unit --ci --runInBand --reporters=default --reporters=jest-junit --reporters=jest-html-reporters
          environment:
            JEST_SUITE_NAME: 'results.xml'
            JEST_JUNIT_OUTPUT_DIR: 'test-results'
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results

  mobile-wallet-lint:
    docker:
      - image: circleci/node:10
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run linting tests
          command: npm run lint

  mobile-wallet-dependency-audit:
    docker:
      - image: circleci/node:10
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Audit mobile wallet dependencies
          command: npm run dependency-audit

  # Proxy server build jobs
  proxy-server-build:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-proxy-server-node-modules-cache-{{ checksum "proxy-server/package-lock.json" }}
      - run:
          name: Install proxy-server node packages
          command: |
            cd proxy-server
            npm install
      - save_cache:
          key: v1-proxy-server-node-modules-cache-{{ checksum "proxy-server/package-lock.json" }}
          paths: 'proxy-server/node_modules/'
      - persist_to_workspace:
          name: Persist workspace
          root: .
          paths: 'proxy-server/'

  proxy-server-lint:
    docker:
      - image: circleci/node:10
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run proxy-server lint
          command: |
            cd proxy-server
            npm run lint

  proxy-server-test:
    docker:
      - image: circleci/node:10
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run proxy-server tests
          command: |
            cd proxy-server
            npm run test

  proxy-server-dependency-audit:
    docker:
      - image: circleci/node:10
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Audit proxy server dependencies
          command: |
            cd proxy-server
            npm run dependency-audit

  proxy-server-publish:
    docker:
      - image: google/cloud-sdk
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run: |
          export SHORT_GIT_HASH=$(echo $CIRCLE_SHA1 | cut -c -7)
          export PROXY_SERVER_DOCKER_TAG=$(echo $PROXY_SERVER_DOCKER_REPO_URL:$SHORT_GIT_HASH)
          echo $PROXY_SERVER_GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
          gcloud auth configure-docker
          cd proxy-server
          docker build -t $PROXY_SERVER_DOCKER_IMAGE_NAME .
          docker tag $PROXY_SERVER_DOCKER_IMAGE_NAME $PROXY_SERVER_DOCKER_TAG
          docker push $PROXY_SERVER_DOCKER_TAG

  proxy-server-deploy:
    docker:
      - image: google/cloud-sdk
    steps:
      - run: |
          export SHORT_GIT_HASH=$(echo $CIRCLE_SHA1 | cut -c -7)
          export PROXY_SERVER_DOCKER_TAG=$(echo $PROXY_SERVER_DOCKER_REPO_URL:$SHORT_GIT_HASH)
          echo $PROXY_SERVER_GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
          gcloud auth configure-docker
          gcloud beta container clusters get-credentials $PROXY_SERVER_GCP_CLUSTER_DEVELOPMENT --region $PROXY_SERVER_GCP_REGION --project $PROXY_SERVER_GCP_PROJECT
          kubectl set image deployment/mobile-wallet-proxy mobile-wallet-proxy=$PROXY_SERVER_DOCKER_TAG

  fastlane-to-testflight:
    macos:
      xcode: "11.1.0"
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - run: 
          name: Decrypting and adding Firebase configuration file
          command: |
            echo "$FIREBASE_CONFIG" | base64 --decode > ios/PlasmaWallet/wallet/GoogleService-Info.plist
      - run: 
          name: Decrypting and adding Sentry configuration file
          command: |
            echo "$SENTRY_CONFIG" | base64 --decode > ios/sentry.properties
      - restore_cache:
          name: Restoring cache (Ruby)
          key: 1-gems-{{ checksum "ios/Gemfile.lock" }}
      - run: 
          name: Installing Ruby dependencies 
          command: |
            cd ios
            bundle install
      - save_cache:
          name: Saving cache (Ruby)
          key: 1-gems-{{ checksum "ios/Gemfile.lock" }}
          paths:
            - 'ios/vendor/bundle/'
      - persist_to_workspace:
          name: Persisting to workspace
          root: .
          paths: 'ios/'
      - run: 
          name: Running Fastlane
          command: |
            cd ios
            bundle exec fastlane testflight_ci
