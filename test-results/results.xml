<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="33" failures="0" time="32.525">
  <testsuite name="Test Plasma Boundary" errors="0" failures="0" skipped="0" timestamp="2020-02-20T07:19:41" time="12.713" tests="9">
    <testcase classname="Test Plasma Boundary getBalances should return BN amount as a string" name="Test Plasma Boundary getBalances should return BN amount as a string" time="0.009">
    </testcase>
    <testcase classname="Test Plasma Boundary getUtxos should return BN amount as a string" name="Test Plasma Boundary getUtxos should return BN amount as a string" time="0.002">
    </testcase>
    <testcase classname="Test Plasma Boundary getUtxos should return utxos where `utxo.currency` === `currency`" name="Test Plasma Boundary getUtxos should return utxos where `utxo.currency` === `currency`" time="0">
    </testcase>
    <testcase classname="Test Plasma Boundary getUtxos should return all utxos if not given `currency`" name="Test Plasma Boundary getUtxos should return all utxos if not given `currency`" time="0.001">
    </testcase>
    <testcase classname="Test Plasma Boundary getUtxos should return utxos where `utxo.currency` === `currency` and `utxo.utxo_pos` &gt;= `fromUtxoPos`" name="Test Plasma Boundary getUtxos should return utxos where `utxo.currency` === `currency` and `utxo.utxo_pos` &gt;= `fromUtxoPos`" time="0.001">
    </testcase>
    <testcase classname="Test Plasma Boundary getUtxos should return utxos where `utxo.utxo_pos` &gt;= `fromUtxoPos`" name="Test Plasma Boundary getUtxos should return utxos where `utxo.utxo_pos` &gt;= `fromUtxoPos`" time="0.001">
    </testcase>
    <testcase classname="Test Plasma Boundary getUtxos should sort utxos by `utxo_pos` in descending" name="Test Plasma Boundary getUtxos should sort utxos by `utxo_pos` in descending" time="0.001">
    </testcase>
    <testcase classname="Test Plasma Boundary depositEth should delegate the call to real depositEth with expected parameters" name="Test Plasma Boundary depositEth should delegate the call to real depositEth with expected parameters" time="0.01">
    </testcase>
    <testcase classname="Test Plasma Boundary depositErc20 should delegate the call to real depositToken with expected parameters" name="Test Plasma Boundary depositErc20 should delegate the call to real depositToken with expected parameters" time="0.035">
    </testcase>
  </testsuite>
  <testsuite name="Test Ethereum Actions" errors="0" failures="0" skipped="0" timestamp="2020-02-20T07:19:41" time="16.183" tests="3">
    <testcase classname="Test Ethereum Actions sendErc20Token should dispatch expected actions to the store" name="Test Ethereum Actions sendErc20Token should dispatch expected actions to the store" time="0.424">
    </testcase>
    <testcase classname="Test Ethereum Actions sendEthToken should dispatch expected actions to the store" name="Test Ethereum Actions sendEthToken should dispatch expected actions to the store" time="0.419">
    </testcase>
    <testcase classname="Test Ethereum Actions fetchAssets should dispatch expected actions to the store" name="Test Ethereum Actions fetchAssets should dispatch expected actions to the store" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="Test Plasma Actions" errors="0" failures="0" skipped="0" timestamp="2020-02-20T07:19:41" time="16.677" tests="5">
    <testcase classname="Test Plasma Actions fetchAssets should dispatch actions as expected" name="Test Plasma Actions fetchAssets should dispatch actions as expected" time="0.065">
    </testcase>
    <testcase classname="Test Plasma Actions depositEth should dispatch actions as expected" name="Test Plasma Actions depositEth should dispatch actions as expected" time="0.358">
    </testcase>
    <testcase classname="Test Plasma Actions depositErc20 should dispatch actions as expected" name="Test Plasma Actions depositErc20 should dispatch actions as expected" time="0.368">
    </testcase>
    <testcase classname="Test Plasma Actions transfer should dispatch actions as expected" name="Test Plasma Actions transfer should dispatch actions as expected" time="0.426">
    </testcase>
    <testcase classname="Test Plasma Actions exit should dispatch actions as expected" name="Test Plasma Actions exit should dispatch actions as expected" time="0.221">
    </testcase>
  </testsuite>
  <testsuite name="Test BlockchainRenderer" errors="0" failures="0" skipped="0" timestamp="2020-02-20T07:19:57" time="2.717" tests="8">
    <testcase classname="Test BlockchainRenderer renderGasFee with zero flat fee should be equal to gasUsed * gasPrice in Ether unit" name="Test BlockchainRenderer renderGasFee with zero flat fee should be equal to gasUsed * gasPrice in Ether unit" time="0.073">
    </testcase>
    <testcase classname="Test BlockchainRenderer renderGasFee with non-zero flat fee should be equal to gasUsed * gasPrice + flatFee in Ether unit" name="Test BlockchainRenderer renderGasFee with non-zero flat fee should be equal to gasUsed * gasPrice + flatFee in Ether unit" time="0.002">
    </testcase>
    <testcase classname="Test BlockchainRenderer renderGasFeeUsd should be equal to gasFee * usdPerEth" name="Test BlockchainRenderer renderGasFeeUsd should be equal to gasFee * usdPerEth" time="0.007">
    </testcase>
    <testcase classname="Test BlockchainRenderer renderEthFromWei should be equal to Wei / 10^18" name="Test BlockchainRenderer renderEthFromWei should be equal to Wei / 10^18" time="0.001">
    </testcase>
    <testcase classname="Test BlockchainRenderer renderTokenBalance should have comma when balance more than or equal to 1000" name="Test BlockchainRenderer renderTokenBalance should have comma when balance more than or equal to 1000" time="0">
    </testcase>
    <testcase classname="Test BlockchainRenderer renderTokenBalance should have decimal places less than given maxDecimal" name="Test BlockchainRenderer renderTokenBalance should have decimal places less than given maxDecimal" time="0">
    </testcase>
    <testcase classname="Test BlockchainRenderer renderTokenPrice should be equal to tokenAmount * pricePerToken with 2 decimal places" name="Test BlockchainRenderer renderTokenPrice should be equal to tokenAmount * pricePerToken with 2 decimal places" time="0.001">
    </testcase>
    <testcase classname="Test BlockchainRenderer renderTotalPrice should be equal to firstPrice + secondPrice with 2 decimal places" name="Test BlockchainRenderer renderTotalPrice should be equal to firstPrice + secondPrice with 2 decimal places" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Test Ethereum Services" errors="0" failures="0" skipped="0" timestamp="2020-02-20T07:19:58" time="5.275" tests="1">
    <testcase classname="Test Ethereum Services fetchAssets should return a list of assets" name="Test Ethereum Services fetchAssets should return a list of assets" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="Test Ethereum Boundary" errors="0" failures="0" skipped="0" timestamp="2020-02-20T07:20:00" time="5.45" tests="3">
    <testcase classname="Test Ethereum Boundary importWalletMnemonic should return a wallet when given 12-words mnemonic" name="Test Ethereum Boundary importWalletMnemonic should return a wallet when given 12-words mnemonic" time="3.03">
    </testcase>
    <testcase classname="Test Ethereum Boundary sendEthToken should send expected parameters" name="Test Ethereum Boundary sendEthToken should send expected parameters" time="0.287">
    </testcase>
    <testcase classname="Test Ethereum Boundary sendERC20Token should send expected parameters" name="Test Ethereum Boundary sendERC20Token should send expected parameters" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Test Formatter" errors="0" failures="0" skipped="0" timestamp="2020-02-20T07:20:05" time="0.934" tests="1">
    <testcase classname="Test Formatter formatUnits should be able to convert from the given unit to the biggest unit" name="Test Formatter formatUnits should be able to convert from the given unit to the biggest unit" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Test Gas Estimator" errors="0" failures="0" skipped="0" timestamp="2020-02-20T07:20:03" time="5.748" tests="1">
    <testcase classname="Test Gas Estimator test estimate gas when sending erc20 token" name="Test Gas Estimator test estimate gas when sending erc20 token" time="3.884">
    </testcase>
  </testsuite>
  <testsuite name="Test Token Util" errors="0" failures="0" skipped="0" timestamp="2020-02-20T07:19:53" time="15.711" tests="2">
    <testcase classname="Test Token Util fetchTokenDetail should return {name, symbol, decimals, price, balance, contractAddress}" name="Test Token Util fetchTokenDetail should return {name, symbol, decimals, price, balance, contractAddress}" time="4.123">
    </testcase>
    <testcase classname="Test Token Util fetchTokens should return [contractAddress: {tokenName, tokenSymbol, tokenDecimal, price, balance}]" name="Test Token Util fetchTokens should return [contractAddress: {tokenName, tokenSymbol, tokenDecimal, price, balance}]" time="8.47">
    </testcase>
  </testsuite>
</testsuites>